from ._anvil_designer import Form1Template
from anvil import *
import anvil.server
import anvil.tables as tables
import anvil.tables.query as q
from anvil.tables import app_tables

class Form1(Form1Template):
  def __init__(self, **properties):
    # Set Form properties and Data Bindings.
    self.init_components(**properties)

    # Any code you write here will run before the form opens.

  def button_1_click(self, **event_args):
   # Lấy dãy số từ TextBox
    input_numbers = self.text_box_1.text
    numbers = [int(num.strip()) for num in input_numbers.split(',')]
   
    # Thực hiện thuật toán Insertion Sort
    for i in range(1, len(numbers)):
        key = numbers[i]
        j = i - 1
        while j >= 0 and numbers[j] > key:
            numbers[j + 1] = numbers[j]
            j = j - 1
        numbers[j + 1] = key
   
    # Hiển thị kết quả sắp xếp trong TextBox
    sorted_numbers = ', '.join(str(num) for num in numbers)
    self.text_box_2.text = sorted_numbers
    pass

  def button_2_click(self, **event_args):
    # Lấy dãy số từ TextBox
    input_numbers = self.text_box_1.text
    numbers = [int(num.strip()) for num in input_numbers.split(',')]
   
    # Thực hiện thuật toán Selection Sort
    for i in range(len(numbers)):
        min_index = i
        for j in range(i+1, len(numbers)):
            if numbers[j] < numbers[min_index]:
                min_index = j
        numbers[i], numbers[min_index] = numbers[min_index], numbers[i]
   
    # Hiển thị kết quả sắp xếp trong TextBox
    sorted_numbers = ', '.join(str(num) for num in numbers)
    self.text_box_2.text = sorted_numbers
    pass

  def button_3_click(self, **event_args):
   # Lấy dãy số từ TextBox
    input_numbers = self.text_box_1.text
    numbers = [int(num.strip()) for num in input_numbers.split(',')]
   
    # Thực hiện thuật toán Bubble Sort
    n = len(numbers)
    for i in range(n-1):
        for j in range(0, n-i-1):
            if numbers[j] > numbers[j+1]:
                numbers[j], numbers[j+1] = numbers[j+1], numbers[j]
   
    # Hiển thị kết quả sắp xếp trong TextBox
    sorted_numbers = ', '.join(str(num) for num in numbers)
    self.text_box_2.text = sorted_numbers
    pass

  def button_4_click(self, **event_args):
     # Lấy dãy số từ TextBox
    input_numbers = self.text_box_1.text
    numbers = [int(num.strip()) for num in input_numbers.split(',')]
   
    # Thực hiện thuật toán Merge Sort
    def merge_sort(arr):
        if len(arr) <= 1:
            return arr
        mid = len(arr) // 2
        left_half = merge_sort(arr[:mid])
        right_half = merge_sort(arr[mid:])
        return merge(left_half, right_half)
   
    def merge(left, right):
        merged = []
        i = j = 0
        while i < len(left) and j < len(right):
            if left[i] < right[j]:
                merged.append(left[i])
                i += 1
            else:
                merged.append(right[j])
                j += 1
        while i < len(left):
            merged.append(left[i])
            i += 1
        while j < len(right):
            merged.append(right[j])
            j += 1
        return merged
   
    numbers = merge_sort(numbers)
   
    # Hiển thị kết quả sắp xếp trong TextBox
    sorted_numbers = ', '.join(str(num) for num in numbers)
    self.text_box_2.text = sorted_numbers
    pass

  def text_box_1_pressed_enter(self, **event_args):
    # Lấy dãy số từ TextBox
    input_numbers = self.text_box_1.text
   
    # Kiểm tra xem dãy số nhập vào có hợp lệ hay không
    try:
        numbers = [int(num.strip()) for num in input_numbers.split(',')]
        self.button_1.enabled = True  # Bật nút button_1 khi dữ liệu hợp lệ
    except ValueError:
        self.button_1.enabled = False  # Tắt nút button_1 khi dữ liệu không hợp lệ
    pass
